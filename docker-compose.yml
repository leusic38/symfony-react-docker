version:  '3.7'
services:
    db:
        ###postgresql
        image: postgres:alpine
        container_name: ${APP_NAME}-postgres
        env_file:
          - .env
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - PGDATA=/var/lib/postgresql/data/pg-data
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data/pg-data
            #### mysql:
        #image: mysql:8.0
        # environment:
        #   MYSQL_ROOT_PASSWORD: root
        #   MYSQL_DATABASE: example
        restart: on-failure

    php:
        container_name: ${APP_NAME}-php
#        user: '1000:1000'
        build:
            context: .
            dockerfile: docker/build-php/Dockerfile
        restart: on-failure
        volumes:
            - './apps/api-symfo:/usr/src/api-symfo'
        links:
            - db:db
    nginx:
        image: nginx:stable-alpine
        container_name: ${APP_NAME}-nginx
        restart: on-failure
        volumes:
            - './apps/api-symfo:/usr/src/api-symfo'
            - './docker/build-nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
            - './docker/build-nginx/site.conf:/etc/nginx/conf.d/site.conf:ro'
        ports:
            - '${NGINX_PORT}:80'
        depends_on:
            - php
            - db
            - redis

    redis:
        image: redis:alpine
        container_name: ${APP_NAME}-redis
        ports:
            - "${REDIS_PORT}:6379"


    client:
        ##reactAppClient
        container_name: ${APP_NAME}-client
        build:
            context: .
            dockerfile: docker/build-node/Dockerfile-client
        volumes:
            - './apps/client-app/src:/usr/src/client-app/src'
            - './apps/client-app/public:/usr/src/client-app/public'
        ports:
            - '${REACT_CLIENT_PORT}:3000'
        environment:
            - NODE_ENV=development
    admin:
        ##reactAppAdmin
        container_name: ${APP_NAME}-admin
        build:
            context: .
            dockerfile: docker/build-node/Dockerfile-admin
        volumes:
            - './apps/admin-app/src:/usr/src/admin-app/src'
            - './apps/admin-app/public:/usr/src/admin-app/public'
        ports:
            - '${REACT_ADMIN_PORT}:3000'
        environment:
            - NODE_ENV=development

volumes:
  postgres-data:
    driver: local
